# -*- coding: utf-8 -*-
"""analysis_ai_heritage
"""

import pandas as pd
import numpy as np
from scipy import stats
import statsmodels.api as sm
import matplotlib.pyplot as plt
import os

# 1. Load data
DATA_PATH = '/content/kochebei.csv'   # ensure file is in same directory
df = pd.read_csv(DATA_PATH)

# 2. Descriptive statistics
scales = [
    "perceived_usefulness",
    "perceived_trust",
    "perceived_authenticity",
    "perceived_engagement",
    "visit_intention"
]
desc = df.groupby("age_group")[scales].agg(['mean', 'std']).round(2)
desc.to_csv('table_desc.csv')

# 3. Hypothesis tests
# H1 - ANOVA Visit Intention
anova_vi = stats.f_oneway(
    df[df['age_group'] == 'Gen Z']['visit_intention'],
    df[df['age_group'] == 'Gen Y']['visit_intention'],
    df[df['age_group'] == 'Gen X+']['visit_intention']
)
anova_df = pd.DataFrame({
    'F-value': [anova_vi.statistic],
    'p-value': [anova_vi.pvalue]
})
anova_df.to_csv('table_anova.csv', index=False)

# H2 - Spearman correlation Trust vs Authenticity
rho, pval = stats.spearmanr(df['perceived_trust'], df['perceived_authenticity'])
corr_df = pd.DataFrame({'Spearman_rho': [rho], 'p-value': [pval]})
corr_df.to_csv('table_corr.csv', index=False)

# H3 - Regression Visit Intention
df['GenZ_dummy'] = (df['age_group'] == 'Gen Z').astype(int)
X = df[['perceived_trust', 'perceived_engagement', 'GenZ_dummy']]
X = sm.add_constant(X)
y = df['visit_intention']
model = sm.OLS(y, X).fit()
reg_df = model.params.to_frame(name='coef')
reg_df['p-value'] = model.pvalues
reg_df.to_csv('table_reg.csv')

# 4. Figures
# Figure 3.1: Boxplot Visit Intention by Age Group
plt.figure(figsize=(6,4))
df.boxplot(column='visit_intention', by='age_group')
plt.title('Visit Intention by Age Group')
plt.suptitle('')
plt.xlabel('Age Group')
plt.ylabel('Visit Intention (1-5)')
plt.tight_layout()
plt.savefig('figure_3_1.png', dpi=300)

# Figure 3.2: Scatter Trust vs Authenticity
plt.figure(figsize=(6,4))
plt.scatter(df['perceived_trust'], df['perceived_authenticity'])
plt.title('Trust vs Authenticity')
plt.xlabel('Perceived Trust (1-5)')
plt.ylabel('Perceived Authenticity (1-5)')
plt.tight_layout()
plt.savefig('figure_3_2.png', dpi=300)

print('Analysis complete. Output files:')
for f in ['table_desc.csv', 'table_anova.csv', 'table_corr.csv', 'table_reg.csv',
          'figure_3_1.png', 'figure_3_2.png']:
    print(' -', f)

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from random import choices


# Calculate descriptive statistics (mean ± SD)
scales = ["perceived_usefulness", "perceived_trust", "perceived_authenticity",
          "perceived_engagement", "visit_intention"]

stats_tbl = df.groupby('age_group')[scales].agg(['mean', 'std']).round(2)
stats_tbl.columns = ['_'.join(col) for col in stats_tbl.columns]

# Combine mean±SD into single string for display
display_tbl = pd.DataFrame(index=stats_tbl.index)
for metric in scales:
    display_tbl[metric] = stats_tbl[f"{metric}_mean"].astype(str) + " ± " + stats_tbl[f"{metric}_std"].astype(str)

# Plot table
fig, ax = plt.subplots(figsize=(9, 2.5))
ax.axis('off')
tbl = ax.table(cellText=display_tbl.reset_index().values,
               colLabels=["Age Group"] + scales,
               loc='center',
               cellLoc='center',
               colLoc='center')
tbl.auto_set_font_size(False)
tbl.set_fontsize(8)
tbl.scale(1, 1.4)
plt.tight_layout()

output_path = 'figure_table_3_1.png'
plt.savefig(output_path, dpi=300, bbox_inches='tight')
plt.show()

print("Saved figure:", output_path)

import pandas as pd
from statsmodels.stats.multicomp import pairwise_tukeyhsd

tukey = pairwise_tukeyhsd(df['visit_intention'], df['age_group'], alpha=0.05)
# Convert to dataframe for display
tukey_df = pd.DataFrame(data=tukey._results_table.data[1:], columns=tukey._results_table.data[0])
tukey_df
tukey_df.to_csv('table_tukey.csv', index=False)
